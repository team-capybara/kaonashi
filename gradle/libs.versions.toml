[versions]
compileSdk = "34"
targetSdk = "34"
minSdk = "25"
versionCode = "1"
versionName = "1.0.0"

agp = "8.2.0"
kotlin = "1.9.23"
coroutines = "1.8.0"

kotlinx-datetime = "0.6.0-RC.2"
kotlinx-serialization = "1.6.3"

androidx-activityCompose = "1.9.0"
androidx-lifecycleCompose = "2.8.0"

compose = "1.6.7"
compose-compiler = "1.5.13"
compose-plugin = "1.6.2"
compose-material3 = "1.2.1"

koin = "3.5.6"
ktor = "2.3.10"
logback = "1.5.6"

decompose = "3.0.0"
decompose-compose = "2.0.0"
decompose-router = "0.7.0"
essenty = "1.3.0"

moko-mvvm = "0.16.1"
moko-permissions = "0.18.0"
moko-resources = "0.24.0"

webview = "1.9.6"
settings = "1.1.1"

gms = "4.4.1"
kmpnotifier = "0.6.0"
stately = "2.0.7"

junit = "4.13.2"

[libraries]
coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "coroutines" }

androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-lifecycle-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycleCompose" }

compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }

kotlinx-datetime = { group = "org.jetbrains.kotlinx", name = "kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serializtion-json", version.ref = "kotlinx-serialization" }

koin-core = { group = "io.insert-koin", name = "koin-core", version.ref = "koin" }
koin-androidx-compose = { group = "io.insert-koin", name = "koin-androidx-compose", version.ref = "koin" }

ktor-client = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
ktor-client-android = { group = "io.ktor", name = "ktor-client-android", version.ref = "ktor" }
ktor-client-darwin = { group = "io.ktor", name = "ktor-client-darwin", version.ref = "ktor" }
ktor-logging = { group = "io.ktor", name = "ktor-client-logging", version.ref = "ktor" }
ktor-content-negotiation = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-json = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-router = { module = "io.github.xxfast:decompose-router", version.ref = "decompose-router" }
decompose-compose = { module = "com.arkivanov.decompose:extensions-compose-jetbrains", version.ref = "decompose-compose" }
essenty-parcelable = { module = "com.arkivanov.essenty:parcelable", version.ref = "essenty" }

moko-mvvm-core = { group = "dev.icerock.moko", name = "mvvm-core", version.ref = "moko-mvvm" }
moko-mvvm-compose = { group = "dev.icerock.moko", name = "mvvm-compose", version.ref = "moko-mvvm" }
moko-mvvm-flow = { group = "dev.icerock.moko", name = "mvvm-flow-compose", version.ref = "moko-mvvm" }
moko-permissions-core = { group = "dev.icerock.moko", name = "permissions", version.ref = "moko-permissions" }
moko-permissions-compose = { group = "dev.icerock.moko", name = "permissions-compose", version.ref = "moko-permissions" }
moko-resources = { group = "dev.icerock.moko", name = "resources", version.ref = "moko-resources" }
moko-resources-generator = { group = "dev.icerock.moko", name = "resources-generator", version.ref = "moko-resources" }
moko-resources-compose = { group = "dev.icerock.moko", name = "resources-compose", version.ref = "moko-resources" }

webview-multiplatform = { module = "io.github.kevinnzou:compose-webview-multiplatform", version.ref = "webview" }

settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "settings" }
settings-noarg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "settings" }

kmpnotifier = { module = "io.github.mirzemehdi:kmpnotifier", version.ref = "kmpnotifier" }
stately-common = { module = "co.touchlab:stately-common", version.ref = "stately" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
googleServices = { id = "com.google.gms.google-services", version.ref = "gms" }
mokoResources = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "moko-resources" }
